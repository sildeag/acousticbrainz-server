FROM phusion/baseimage:latest

# Install Dockerize
#ENV DOCKERIZE_VERSION v0.6.1
#RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
#    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Installing dependencies
##RUN add-apt-repository ppa:jonathonf/gcc-7.1 \
RUN apt-get update \
    && apt-get install -y qt5-default qtbase5-dev qtchooser qt5-qmake  
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
                       build-essential \
                       autotools-dev automake \
                       libyaml-dev \
                       libfftw3-dev \
                       libavcodec-dev \
                       libavformat-dev \
                       libavutil-dev \
                       libavresample-dev \
                       python3-pip \
                       python3-dev \
                       python3-numpy-dev \
                       python3-numpy \
                       git \
                       libsamplerate0-dev \
                       libtag1-dev \
                       doxygen \
                       swig \
                       pkg-config \
                       libpq-dev \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir /code
RUN mkdir /code/hl_extractor
RUN mkdir /data
WORKDIR /code

# Waf
# See https://github.com/sildeag/waf.git
RUN git clone https://github.com/sildeag/waf.git /tmp/waf \
    && cd /tmp/waf \
    && python3 ./waf-light configure --tools=swig,qt5,qt4 build \
    && python3 ./waf install \
    && cd /
# Swig
# See https://github.com/swig/swig.git
RUN git clone https://github.com/swig/swig.git /tmp/swig \
    && cd /tmp/swig \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make install \
    && cd /

# Gaia
#RUN rm -r /tmp/gaia
# See https://github.com/sildeag/gaia
RUN qtchooser -l \
    && qtchooser=qt5 
ENV QT_SELECT qt5

ENV CPATH /usr/include/x86_64-linux-gnu/qt5/QtCore:/usr/include/x86_64-linux-gnu/qt5:/usr/include/x86_64-linux-gnu/qt5/QtWidgets:/usr/include/x86_64-linux-gnu/qt5/QtGui:  
 
ENV QTDIR=/usr/lib/x86_64-linux-gnu/qt5
ENV PATH=$QTDIR/bin:$PATH
ENV LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH

RUN git clone https://github.com/sildeag/gaia /tmp/gaia \
    && cd /tmp/gaia \
    && cp /tmp/waf/waf . \
    && cp -r /tmp/waf/waflib . \
    && python3 ./waf configure --with-python-bindings --with-gaia-qt5 \ 
#--qtbin=/usr/lib/qt5/bin --qtdir=/usr/lib/x86_64-linux-gnu --qtlibs=/usr/lib/x86_64-linux-gnu 
    && cat /tmp/gaia/build/config.log \
    && python3 ./waf \
    && python3 ./waf install

# Essentia
# See http://essentia.upf.edu/documentation/installing.html
RUN git clone https://github.com/sildeag/essentia /tmp/essentia \
    && cd /tmp/essentia \
    && cp /tmp/waf/waf . \
    && cp -r /tmp/waf/waflib . \ 
    && python3 ./waf configure --mode=release --with-gaia --with-gaia-qt5 --with-example=streaming_extractor_music_svm \
    && python3 ./waf \
    && python3 ./waf install \
    && ldconfig \
    && cp /tmp/essentia/build/src/examples/essentia_streaming_extractor_music_svm /code/hl_extractor/streaming_extractor_music_svm \
    && cd / && rm -r /tmp/essentia 

RUN rm -r /tmp/waf 

# SVM models
RUN mkdir /tmp/models \
    && cd /tmp/models \
    && curl --silent -o models.tar.gz http://essentia.upf.edu/documentation/svm_models/essentia-extractor-svm_models-v2.1_beta1.tar.gz \
    && tar -xvzf models.tar.gz \
    && mv /tmp/models/v2.1_beta1/svm_models /data/ \
    && cd / && rm -r /tmp/models

# Python dependencies
RUN mkdir /code/docs/
COPY docs/requirements.txt /code/docs/requirements.txt
COPY requirements.txt /code/requirements.txt
RUN pip3 install --no-cache-dir -r requirements.txt

COPY . /code

